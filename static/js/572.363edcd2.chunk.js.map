{"version":3,"file":"static/js/572.363edcd2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Sidebar/styles.module.css?4887","components/Sidebar/Sidebar.jsx","webpack://react-homework-template/./src/components/AdvertWrapper/styles.module.css?1b30","components/services/advertsServices.js","redux/filter/selectors.js","components/AdvertWrapper/AdvertsWrapper.jsx","pages/AdvertsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"aside\":\"styles_aside__AW1db\",\"filtersTitle\":\"styles_filtersTitle__7LcgK\",\"locationInput\":\"styles_locationInput__eZw5k\",\"fieldset\":\"styles_fieldset__aZAXW\",\"legend\":\"styles_legend__Nc9Y4\",\"hr\":\"styles_hr__R1W8l\",\"inputList\":\"styles_inputList__PPw+n\",\"listIcon\":\"styles_listIcon__3IzVn\",\"listIcon2\":\"styles_listIcon2__pEyiq\",\"inputLabel\":\"styles_inputLabel__jCDXE\",\"input\":\"styles_input__s3x4I\",\"searchBtn\":\"styles_searchBtn__JCU1f\"};","import styles from './styles.module.css';\nimport sprite from '../../icons/icons.svg';\nimport {\n  changeEquipment,\n  changeLocation,\n  changeType,\n} from '../../redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nconst Sidebar = () => {\n  const [selectedType, setSelectedType] = useState('');\n  const [selectedEquipment, setSelectedEquipment] = useState([]);\n\n  const handleTypeChange = e => setSelectedType(e.target.value);\n  const handleEquipmentChange = e => {\n    const { value, checked } = e.target;\n    if (checked) {\n      setSelectedEquipment(prevState => [...prevState, value]);\n    } else {\n      setSelectedEquipment(prevState =>\n        prevState.filter(item => item !== value)\n      );\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const setFilters = location => {\n    dispatch(changeEquipment(selectedEquipment));\n    dispatch(changeType(selectedType));\n    dispatch(changeLocation(location));\n  };\n\n  const resetFilters = () => {\n    setSelectedEquipment([]);\n    setSelectedType('');\n  };\n\n  return (\n    <aside className={styles.aside}>\n      <form\n        action=\"submit\"\n        onSubmit={e => {\n          setFilters(e.target.elements[0].value);\n          e.preventDefault();\n        }}\n        className={styles.form}\n      >\n        <input\n          type=\"text\"\n          name=\"location\"\n          className={styles.locationInput}\n          placeholder=\"Location\"\n        />\n        <p className={styles.filtersTitle}>Filters</p>\n        <fieldset className={styles.fieldset}>\n          <legend className={styles.legend}>Vehicle equipment</legend>\n          <hr className={styles.hr} />\n          <ul className={styles.inputList}>\n            <li className={styles.inputItem}>\n              <input\n                type=\"checkbox\"\n                id=\"airConditioner\"\n                name=\"equipment\"\n                value=\"airConditioner\"\n                className={styles.input}\n                onChange={handleEquipmentChange}\n              />\n\n              <label htmlFor=\"airConditioner\" className={styles.inputLabel}>\n                <svg width={32} height={32} className={styles.listIcon}>\n                  <use xlinkHref={`${sprite}#icon-AC`} />\n                </svg>\n                AC\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                id=\"radio\"\n                name=\"equipment\"\n                value=\"radio\"\n                className={styles.input}\n                onChange={handleEquipmentChange}\n              />\n              <label htmlFor=\"radio\" className={styles.inputLabel}>\n                <svg width={32} height={32} className={styles.listIcon2}>\n                  <use xlinkHref={`${sprite}#icon-radio`} />\n                </svg>\n                Radio\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                id=\"kitchen\"\n                name=\"equipment\"\n                value=\"kitchen\"\n                className={styles.input}\n                onChange={handleEquipmentChange}\n              />\n              <label htmlFor=\"kitchen\" className={styles.inputLabel}>\n                <svg width={32} height={32} className={styles.listIcon2}>\n                  <use xlinkHref={`${sprite}#icon-kitchen`} />\n                </svg>\n                Kitchen\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                id=\"TV\"\n                name=\"equipment\"\n                value=\"TV\"\n                className={styles.input}\n                onChange={handleEquipmentChange}\n              />\n              <label htmlFor=\"TV\" className={styles.inputLabel}>\n                <svg width={32} height={32} className={styles.listIcon2}>\n                  <use xlinkHref={`${sprite}#icon-TV`} />\n                </svg>\n                TV\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                id=\"shower\"\n                name=\"equipment\"\n                value=\"shower\"\n                className={styles.input}\n                onChange={handleEquipmentChange}\n              />\n              <label htmlFor=\"shower\" className={styles.inputLabel}>\n                <svg width={32} height={32} className={styles.listIcon2}>\n                  <use xlinkHref={`${sprite}#icon-shower`} />\n                </svg>\n                Shower/WC\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n        <fieldset className={styles.fieldset}>\n          <legend className={styles.legend}>Vehicle type</legend>\n          <hr className={styles.hr} />\n          <ul className={styles.inputList}>\n            <li>\n              <input\n                type=\"radio\"\n                id=\"panelTruck\"\n                name=\"type\"\n                value=\"panelTruck\"\n                className={styles.input}\n                onChange={handleTypeChange}\n              />\n              <label htmlFor=\"panelTruck\" className={styles.inputLabel}>\n                <svg width={40} height={28} className={styles.listIcon}>\n                  <use xlinkHref={`${sprite}#icon-van`} />\n                </svg>\n                Panel Truck\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"radio\"\n                id=\"fullyIntegrated\"\n                name=\"type\"\n                value=\"fullyIntegrated\"\n                className={styles.input}\n                onChange={handleTypeChange}\n              />\n              <label htmlFor=\"fullyIntegrated\" className={styles.inputLabel}>\n                <svg width={40} height={28} className={styles.listIcon}>\n                  <use xlinkHref={`${sprite}#icon-fully`} />\n                </svg>\n                Fully Integrated\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"radio\"\n                id=\"alcove\"\n                name=\"type\"\n                value=\"alcove\"\n                className={styles.input}\n                onChange={handleTypeChange}\n              />\n              <label htmlFor=\"alcove\" className={styles.inputLabel}>\n                <svg width={40} height={28} className={styles.listIcon}>\n                  <use xlinkHref={`${sprite}#icon-alcove`} />\n                </svg>\n                Alcove\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n        <button\n          type=\"button\"\n          onClick={e => {\n            e.target.form.reset();\n            resetFilters();\n          }}\n        >\n          Clear filters\n        </button>\n        <button className={styles.searchBtn}>Search</button>\n      </form>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"styles_section__CXQFi\",\"cardWrapper\":\"styles_cardWrapper__VdqYQ\",\"noAdverts\":\"styles_noAdverts__NxQb9\",\"list\":\"styles_list__E-TVR\",\"loadBtn\":\"styles_loadBtn__nnvu3\"};","import axios from 'axios';\nimport Notiflix from 'notiflix';\naxios.defaults.baseURL =\n  'https://658bf2b8859b3491d3f5226d.mockapi.io/adverts/campers';\n\nexport const fetchAdverts = async () => {\n  try {\n    const { data } = await axios.get();\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(error);\n    return;\n  }\n};\n","export const selectType = state => state.filter.type;\nexport const selectEquipment = state => state.filter.equipment;\nexport const selectLocation = state => state.filter.location;\n","import { useEffect, useState } from 'react';\n\nimport AdvertItem from '../AdvertItem/AdvertItem';\nimport styles from './styles.module.css';\nimport { fetchAdverts } from 'components/services/advertsServices';\nimport { useSelector } from 'react-redux';\nimport {\n  selectEquipment,\n  selectLocation,\n  selectType,\n} from '../../redux/filter/selectors';\n\nconst AdvertsWrapper = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [adverts, setAdverts] = useState([]);\n\n  const form = useSelector(selectType);\n  const location = useSelector(selectLocation);\n  const equipment = useSelector(selectEquipment);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchAdverts();\n      setAdverts(data);\n    }\n    setIsLoading(true);\n    fetchData();\n    setIsLoading(false);\n  }, []);\n\n  const filteredAdverts = adverts.filter(advert => {\n    // Перевіряємо тип\n    if (form !== '' && advert.form !== form) return false;\n\n    // Перевіряємо обладнання\n    if (equipment.length > 0) {\n      for (const item of equipment) {\n        if (!advert.details[item]) return false;\n      }\n    }\n    // Перевіряємо місце розташування\n    return !(\n      location !== '' &&\n      !advert.location.toLowerCase().includes(location.toLowerCase())\n    );\n  });\n\n  return (\n    <section className={styles.section}>\n      {isLoading ? (\n        <div className=\"loader\"></div>\n      ) : (\n        <>\n          {filteredAdverts.length === 0 ? (\n            <div className={styles.noAdverts}>Oooops... No adverts here</div>\n          ) : (\n            <ul className={styles.list}>\n              {filteredAdverts.map(advert => (\n                <li className={styles.cardWrapper} key={advert._id}>\n                  <AdvertItem advertData={advert} />\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default AdvertsWrapper;\n","import Sidebar from '../components/Sidebar/Sidebar';\nimport AdvertsWrapper from '../components/AdvertWrapper/AdvertsWrapper';\n\nconst ContactsPage = () => {\n  return (\n    <div style={{ display: 'flex', gap: '0 40px' }}>\n      <Sidebar />\n      <AdvertsWrapper />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","selectedType","setSelectedType","_useState3","_useState4","selectedEquipment","setSelectedEquipment","handleTypeChange","e","target","value","handleEquipmentChange","_e$target","checked","prevState","concat","_toConsumableArray","filter","item","dispatch","useDispatch","_jsx","className","styles","children","_jsxs","action","onSubmit","location","elements","changeEquipment","changeType","changeLocation","preventDefault","type","name","placeholder","id","onChange","htmlFor","width","height","xlinkHref","sprite","onClick","form","reset","axios","fetchAdverts","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","t0","Notiflix","stop","apply","arguments","selectType","state","selectEquipment","equipment","selectLocation","isLoading","setIsLoading","adverts","setAdverts","useSelector","useEffect","_fetchData","fetchData","filteredAdverts","advert","length","_step","_iterator","_createForOfIteratorHelper","s","n","done","details","err","f","toLowerCase","includes","_Fragment","map","AdvertItem","advertData","_id","style","display","gap","Sidebar","AdvertsWrapper"],"sourceRoot":""}